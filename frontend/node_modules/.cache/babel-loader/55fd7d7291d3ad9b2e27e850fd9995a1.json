{"ast":null,"code":"var _jsxFileName = \"/Users/anastasiiaandreeva/Desktop/Yandex.Practikum/dev/react-mesto-auth/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport { useState } from \"react\";\nimport ImagePopup from \"./ImagePopup\";\nimport React from \"react\";\nimport { api } from \"../utils/Api\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport { Redirect, Route, Switch, useHistory } from \"react-router-dom\";\nimport Login from \"./Login\";\nimport Register from \"./Register\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport * as siteAuth from \"./siteAuth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditAvatarPopupOpen, setAvatarModalIsOpen] = useState(false);\n  const [isEditProfilePopupOpen, setEditProfileModalIsOpen] = useState(false);\n  const [isAddPlacePopupOpen, setAddPlaceModalIsOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setNewCards] = useState([]);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const history = useHistory();\n  React.useEffect(() => {\n    if (loggedIn) {\n      api.getUserData().then(res => {\n        setCurrentUser(res);\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }, [loggedIn]);\n  React.useEffect(() => {\n    if (loggedIn) {\n      api.getInitialCards().then(res => {\n        setNewCards(res);\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }, [loggedIn]);\n\n  const handleEditAvatarClick = () => {\n    setAvatarModalIsOpen(true);\n  };\n\n  const handleEditProfileClick = () => {\n    setEditProfileModalIsOpen(true);\n  };\n\n  const handleAddPlaceClick = () => {\n    setAddPlaceModalIsOpen(true);\n  };\n\n  const handleCardClick = card => {\n    setSelectedCard(card);\n  };\n\n  const handleAddPlaceSubmit = card => {\n    api.addCard(card).then(newCard => {\n      setNewCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const handleCardLike = card => {\n    const isLiked = card.likes.some(i => i._id === currentUser._id); // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      setNewCards(cards => cards.map(c => c._id === card._id ? newCard : c));\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const handleCardDelete = card => {\n    api.deleteCard(card._id).then(() => {\n      setNewCards(cards => cards.filter(c => c._id !== card._id));\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const closeAllPopups = () => {\n    setAvatarModalIsOpen(false);\n    setEditProfileModalIsOpen(false);\n    setAddPlaceModalIsOpen(false);\n    setSelectedCard(null);\n  };\n\n  const handleUpdateUser = data => {\n    api.editProfile(data).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  function handleUpdateAvatar(_ref) {\n    let {\n      avatar\n    } = _ref;\n    api.editAvatar(avatar).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  const handleLogin = _ref2 => {\n    let {\n      password,\n      email\n    } = _ref2;\n    siteAuth.signIn({\n      password,\n      email\n    }).then(res => {\n      setLoggedIn(true);\n      localStorage.setItem('jwt', JSON.stringify(res.token));\n      history.push('/');\n    });\n  };\n\n  const handleRegister = _ref3 => {\n    let {\n      password,\n      email\n    } = _ref3;\n    siteAuth.signUp({\n      password,\n      email\n    }).then(res => {\n      console.log(res);\n    });\n  };\n\n  console.log(loggedIn);\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            path: \"/\",\n            component: Main,\n            loggedIn: loggedIn,\n            onEditAvatar: handleEditAvatarClick,\n            onEditProfile: handleEditProfileClick,\n            onAddPlace: handleAddPlaceClick,\n            onCardClick: handleCardClick,\n            onCardLike: handleCardLike,\n            onCardDelete: handleCardDelete,\n            cards: cards\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/sign-in\",\n            children: /*#__PURE__*/_jsxDEV(Login, {\n              handleLogin: handleLogin\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/sign-up\",\n            children: /*#__PURE__*/_jsxDEV(Register, {\n              handleRegister: handleRegister\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            children: loggedIn ? /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 27\n            }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/sign-in\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n          isOpen: isEditProfilePopupOpen,\n          onClose: closeAllPopups,\n          onUpdateUser: handleUpdateUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n          isOpen: isAddPlacePopupOpen,\n          onClose: closeAllPopups,\n          onAddCard: handleAddPlaceSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n          isOpen: isEditAvatarPopupOpen,\n          onClose: closeAllPopups,\n          onUpdateAvatar: handleUpdateAvatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n          card: selectedCard,\n          onClose: closeAllPopups,\n          name: \"open-photo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n          title: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",\n          name: \"delete-card\",\n          button: \"\\u0414\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"lNwzJz8zH7bybJAJdYjQxlnUVfo=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/anastasiiaandreeva/Desktop/Yandex.Practikum/dev/react-mesto-auth/src/components/App.js"],"names":["Header","Main","Footer","PopupWithForm","useState","ImagePopup","React","api","CurrentUserContext","EditProfilePopup","EditAvatarPopup","AddPlacePopup","Redirect","Route","Switch","useHistory","Login","Register","ProtectedRoute","siteAuth","App","isEditAvatarPopupOpen","setAvatarModalIsOpen","isEditProfilePopupOpen","setEditProfileModalIsOpen","isAddPlacePopupOpen","setAddPlaceModalIsOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","cards","setNewCards","loggedIn","setLoggedIn","history","useEffect","getUserData","then","res","catch","err","console","log","getInitialCards","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleCardClick","card","handleAddPlaceSubmit","addCard","newCard","closeAllPopups","handleCardLike","isLiked","likes","some","i","_id","changeLikeCardStatus","map","c","handleCardDelete","deleteCard","filter","handleUpdateUser","data","editProfile","handleUpdateAvatar","avatar","editAvatar","handleLogin","password","email","signIn","localStorage","setItem","JSON","stringify","token","push","handleRegister","signUp"],"mappings":"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","sourcesContent":["import Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport {useState} from \"react\";\nimport ImagePopup from \"./ImagePopup\";\nimport React from \"react\";\nimport {api} from \"../utils/Api\";\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport {Redirect, Route, Switch, useHistory} from \"react-router-dom\";\nimport Login from \"./Login\";\nimport Register from \"./Register\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport * as siteAuth from \"./siteAuth\";\n\nfunction App() {\n\n  const [isEditAvatarPopupOpen, setAvatarModalIsOpen] = useState(false);\n  const [isEditProfilePopupOpen, setEditProfileModalIsOpen] = useState(false);\n  const [isAddPlacePopupOpen, setAddPlaceModalIsOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setNewCards] = useState([]);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const history = useHistory();\n\n  React.useEffect(() => {\n    if(loggedIn) {\n      api.getUserData()\n        .then((res) => {\n          setCurrentUser(res)\n        })\n        .catch((err) => {\n          console.log(err)\n        })\n    }\n  }, [loggedIn])\n\n  React.useEffect(() => {\n    if(loggedIn){\n      api.getInitialCards()\n        .then((res) => {\n          setNewCards(res)\n        })\n        .catch((err) => {\n          console.log(err)\n        })\n    }\n  }, [loggedIn])\n\n  const handleEditAvatarClick = () => {\n    setAvatarModalIsOpen(true);\n  }\n\n  const handleEditProfileClick = () => {\n    setEditProfileModalIsOpen(true);\n  }\n\n  const handleAddPlaceClick = () => {\n    setAddPlaceModalIsOpen(true);\n  }\n\n  const handleCardClick = (card) => {\n    setSelectedCard(card)\n  }\n\n  const handleAddPlaceSubmit = (card) => {\n    api.addCard(card)\n      .then((newCard) => {\n        setNewCards([newCard, ...cards]);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n\n  const handleCardLike = (card) => {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.changeLikeCardStatus(card._id, !isLiked)\n      .then((newCard) => {\n        setNewCards((cards) => cards.map((c) => c._id === card._id ? newCard : c));\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n\n  }\n\n  const handleCardDelete = (card) => {\n    api.deleteCard(card._id)\n      .then(() => {\n        setNewCards((cards) => cards.filter((c) => c._id !== card._id))\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n\n  const closeAllPopups = () => {\n    setAvatarModalIsOpen(false);\n    setEditProfileModalIsOpen(false);\n    setAddPlaceModalIsOpen(false);\n    setSelectedCard(null)\n  }\n\n  const handleUpdateUser = (data) => {\n    api.editProfile(data)\n      .then((res) => {\n        setCurrentUser(res)\n        closeAllPopups()\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n\n  function handleUpdateAvatar({avatar}) {\n    api.editAvatar(avatar)\n      .then((res) => {\n        setCurrentUser(res)\n        closeAllPopups()\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n\n  const handleLogin = ({password, email}) => {\n    siteAuth.signIn({password, email})\n      .then((res) => {\n        setLoggedIn(true)\n        localStorage.setItem('jwt', JSON.stringify(res.token))\n        history.push('/')\n      })\n\n  }\n\n  const handleRegister = ({password, email }) => {\n    siteAuth.signUp({password, email})\n      .then((res) => {\n        console.log(res)\n      })\n  }\n  console.log(loggedIn)\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page\">\n        <div className=\"container\">\n          <Header/>\n          <Switch>\n            <ProtectedRoute path='/'\n                            component={Main}\n                            loggedIn={loggedIn}\n                            onEditAvatar={handleEditAvatarClick}\n                            onEditProfile={handleEditProfileClick}\n                            onAddPlace={handleAddPlaceClick}\n                            onCardClick={handleCardClick}\n                            onCardLike={handleCardLike}\n                            onCardDelete={handleCardDelete}\n                            cards={cards}\n            />\n            <Route path='/sign-in'>\n              <Login handleLogin={handleLogin}/>\n            </Route>\n            <Route path='/sign-up'>\n              <Register handleRegister={handleRegister}/>\n            </Route>\n            <Route exact path='/'>\n              {loggedIn ? <Redirect to='/' /> : <Redirect to='/sign-in'/>}\n            </Route>\n\n            {/*<Route path='/sign-in'>\n              <Login handleLogin={handleLogin}/>\n            </Route>\n            <Route path='/sign-up'>\n              <Register handleRegister={handleRegister}/>\n            </Route>\n            <ProtectedRoute exact path='/'\n                            loggedIn={loggedIn}\n                            component={Main}\n                            onEditAvatar={handleEditAvatarClick}\n                            onEditProfile={handleEditProfileClick}\n                            onAddPlace={handleAddPlaceClick}\n                            onCardClick={handleCardClick}\n                            onCardLike={handleCardLike}\n                            onCardDelete={handleCardDelete}\n                            cards={cards}\n            />\n              {loggedIn ? <Redirect to='/'/> : <Redirect to='/sign-in'/>}\n              <Main onEditAvatar={handleEditAvatarClick}\n                    onEditProfile={handleEditProfileClick}\n                    onAddPlace={handleAddPlaceClick}\n                    onCardClick={handleCardClick}\n                    onCardLike={handleCardLike}\n                    onCardDelete={handleCardDelete}\n                    cards={cards}\n              />\n              <Footer/>\n            </ProtectedRoute>\n            <Route exact path=\"/\"> {loggedIn ? (<Redirect to='/' />) : (<Redirect to='/sign-in' />) }</Route>*/}\n          </Switch>\n          <Footer/>\n          {/*Popup Edit Profile*/}\n          <EditProfilePopup\n            isOpen={isEditProfilePopupOpen}\n            onClose={closeAllPopups}\n            onUpdateUser={handleUpdateUser}\n          />\n          {/*Add card popup*/}\n          <AddPlacePopup\n            isOpen={isAddPlacePopupOpen}\n            onClose={closeAllPopups}\n            onAddCard={handleAddPlaceSubmit}\n          />\n          <EditAvatarPopup\n            isOpen={isEditAvatarPopupOpen}\n            onClose={closeAllPopups}\n            onUpdateAvatar={handleUpdateAvatar}\n          />\n          {/*Окно фото*/}\n          <ImagePopup\n            card={selectedCard}\n            onClose={closeAllPopups}\n            name=\"open-photo\"\n          />\n          {/*Окно удаления карточки*/}\n          <PopupWithForm\n            title=\"Вы уверены?\"\n            name=\"delete-card\"\n            button=\"Да\"\n          />\n        </div>\n      </div>\n    </CurrentUserContext.Provider>\n\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}