{"ast":null,"code":"export var BASE_URL='https://auth.nomoreparties.co';export var signUp=function signUp(_ref){var password=_ref.password,email=_ref.email;return fetch(\"\".concat(BASE_URL,\"/signup\"),{method:'POST',headers:{\"Accept\":\"application/json\",\"Content-Type\":\"application/json\"},body:JSON.stringify({password:password,email:email})}).then(function(res){if(res.ok){return res.json();}else if(res.status===400){return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \\u043D\\u0435\\u043A\\u043E\\u0440\\u0440\\u0435\\u043A\\u0442\\u043D\\u043E \\u0437\\u0430\\u043F\\u043E\\u043B\\u043D\\u0435\\u043D\\u043E \\u043E\\u0434\\u043D\\u043E \\u0438\\u0437 \\u043F\\u043E\\u043B\\u0435\\u0439\");}else{return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));}});};export var signIn=function signIn(_ref2){var password=_ref2.password,email=_ref2.email;return fetch(\"\".concat(BASE_URL,\"/signin\"),{method:'POST',headers:{\"Accept\":'application/json',\"Content-Type\":\"application/json\"},body:JSON.stringify({password:password,email:email})}).then(function(res){if(res.ok){return res.json();}else if(res.status===400){return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \\u043D\\u0435 \\u043F\\u0435\\u0440\\u0435\\u0434\\u0430\\u043D\\u043E \\u043E\\u0434\\u043D\\u043E \\u0438\\u0437 \\u043F\\u043E\\u043B\\u0435\\u0439\");}else if(res.status===401){return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C \\u0441 email \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\");}else{return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));}});};export var checkToken=function checkToken(jwt){return fetch(\"\".concat(BASE_URL,\"/users/me\"),{method:'GET',headers:{\"Content-Type\":\"application/json\",\"Authorization\":\"Bearer \".concat(jwt)}}).then(function(res){if(res.ok){return res.json();}if(res.status===400){return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \\u0422\\u043E\\u043A\\u0435\\u043D \\u043D\\u0435 \\u043F\\u0435\\u0440\\u0435\\u0434\\u0430\\u043D \\u0438\\u043B\\u0438 \\u043F\\u0435\\u0440\\u0435\\u0434\\u0430\\u043D \\u043D\\u0435 \\u0432 \\u0442\\u043E\\u043C \\u0444\\u043E\\u0440\\u043C\\u0430\\u0442\\u0435\");}else if(res.status===401){return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \\u041F\\u0435\\u0440\\u0435\\u0434\\u0430\\u043D\\u043D\\u044B\\u0439 \\u0442\\u043E\\u043A\\u0435\\u043D \\u043D\\u0435\\u043A\\u043E\\u0440\\u0440\\u0435\\u043A\\u0442\\u0435\\u043D\");}else{return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));}});};","map":{"version":3,"sources":["/Users/anastasiiaandreeva/Desktop/Yandex.Practikum/dev/react-mesto-auth/src/utils/siteAuth.js"],"names":["BASE_URL","signUp","password","email","fetch","method","headers","body","JSON","stringify","then","res","ok","json","status","Promise","reject","signIn","checkToken","jwt"],"mappings":"AAAA,MAAO,IAAMA,CAAAA,QAAQ,CAAG,+BAAjB,CAEP,MAAO,IAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,MAAuB,IAArBC,CAAAA,QAAqB,MAArBA,QAAqB,CAAXC,KAAW,MAAXA,KAAW,CAC3C,MAAOC,CAAAA,KAAK,WAAIJ,QAAJ,YAAuB,CACjCK,MAAM,CAAE,MADyB,CAEjCC,OAAO,CAAE,CACP,SAAU,kBADH,CAEP,eAAgB,kBAFT,CAFwB,CAMjCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACnBP,QAAQ,CAARA,QADmB,CAEnBC,KAAK,CAALA,KAFmB,CAAf,CAN2B,CAAvB,CAAL,CAWJO,IAXI,CAWC,SAACC,GAAD,CAAS,CACb,GAAIA,GAAG,CAACC,EAAR,CAAY,CACV,MAAOD,CAAAA,GAAG,CAACE,IAAJ,EAAP,CACD,CAFD,IAEO,IAAIF,GAAG,CAACG,MAAJ,GAAe,GAAnB,CAAwB,CAC7B,MAAOC,CAAAA,OAAO,CAACC,MAAR,wOAAP,CACD,CAFM,IAEA,CACL,MAAOD,CAAAA,OAAO,CAACC,MAAR,iDAA0BL,GAAG,CAACG,MAA9B,EAAP,CACD,CACF,CAnBI,CAAP,CAoBD,CArBM,CAuBP,MAAO,IAAMG,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,OAAuB,IAArBf,CAAAA,QAAqB,OAArBA,QAAqB,CAAXC,KAAW,OAAXA,KAAW,CAC3C,MAAOC,CAAAA,KAAK,WAAIJ,QAAJ,YAAuB,CACjCK,MAAM,CAAE,MADyB,CAEjCC,OAAO,CAAE,CACP,SAAU,kBADH,CAEP,eAAgB,kBAFT,CAFwB,CAMjCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACnBP,QAAQ,CAARA,QADmB,CAEnBC,KAAK,CAALA,KAFmB,CAAf,CAN2B,CAAvB,CAAL,CAWJO,IAXI,CAWC,SAACC,GAAD,CAAS,CACb,GAAGA,GAAG,CAACC,EAAP,CAAW,CACT,MAAOD,CAAAA,GAAG,CAACE,IAAJ,EAAP,CACD,CAFD,IAEO,IAAIF,GAAG,CAACG,MAAJ,GAAe,GAAnB,CAAwB,CAC7B,MAAOC,CAAAA,OAAO,CAACC,MAAR,4KAAP,CACD,CAFM,IAEA,IAAKL,GAAG,CAACG,MAAJ,GAAe,GAApB,CAAyB,CAC9B,MAAOC,CAAAA,OAAO,CAACC,MAAR,iLAAP,CACD,CAFM,IAEA,CACL,MAAOD,CAAAA,OAAO,CAACC,MAAR,iDAA0BL,GAAG,CAACG,MAA9B,EAAP,CACD,CACF,CArBI,CAAP,CAsBD,CAvBM,CAyBP,MAAO,IAAMI,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,GAAD,CAAS,CACjC,MAAOf,CAAAA,KAAK,WAAIJ,QAAJ,cAAyB,CACnCK,MAAM,CAAE,KAD2B,CAEnCC,OAAO,CAAE,CACP,eAAgB,kBADT,CAEP,iCAA4Ba,GAA5B,CAFO,CAF0B,CAAzB,CAAL,CAOJT,IAPI,CAOC,SAACC,GAAD,CAAS,CACb,GAAGA,GAAG,CAACC,EAAP,CAAW,CACT,MAAOD,CAAAA,GAAG,CAACE,IAAJ,EAAP,CACD,CAAC,GAAIF,GAAG,CAACG,MAAJ,GAAe,GAAnB,CAAwB,CACxB,MAAOC,CAAAA,OAAO,CAACC,MAAR,gRAAP,CACD,CAFC,IAEK,IAAKL,GAAG,CAACG,MAAJ,GAAe,GAApB,CAAyB,CAC9B,MAAOC,CAAAA,OAAO,CAACC,MAAR,wMAAP,CACD,CAFM,IAEA,CACL,MAAOD,CAAAA,OAAO,CAACC,MAAR,iDAA0BL,GAAG,CAACG,MAA9B,EAAP,CACD,CACF,CAjBI,CAAP,CAkBD,CAnBM","sourcesContent":["export const BASE_URL = 'https://auth.nomoreparties.co';\n\nexport const signUp = ({password, email}) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      \"Accept\": \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  })\n    .then((res) => {\n      if (res.ok) {\n        return res.json()\n      } else if (res.status === 400) {\n        return Promise.reject(`Ошибка: некорректно заполнено одно из полей`)\n      } else {\n        return Promise.reject(`Ошибка: ${res.status}`)\n      }\n    })\n}\n\nexport const signIn = ({password, email}) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      \"Accept\": 'application/json',\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  })\n    .then((res) => {\n      if(res.ok) {\n        return res.json()\n      } else if (res.status === 400) {\n        return Promise.reject(`Ошибка: не передано одно из полей`)\n      } else if ( res.status === 401) {\n        return Promise.reject(`Ошибка: пользователь с email не найден`)\n      } else {\n        return Promise.reject(`Ошибка: ${res.status}`)\n      }\n    })\n}\n\nexport const checkToken = (jwt) => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\" : `Bearer ${jwt}`\n    }\n  })\n    .then((res) => {\n      if(res.ok) {\n        return res.json();\n      } if (res.status === 400) {\n        return Promise.reject(`Ошибка: Токен не передан или передан не в том формате`)\n      } else if ( res.status === 401) {\n        return Promise.reject(`Ошибка: Переданный токен некорректен`)\n      } else {\n        return Promise.reject(`Ошибка: ${res.status}`)\n      }\n    })\n}\n"]},"metadata":{},"sourceType":"module"}