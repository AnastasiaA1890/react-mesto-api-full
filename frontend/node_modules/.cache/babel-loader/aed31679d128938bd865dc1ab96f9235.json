{"ast":null,"code":"class Api {\n  constructor(_ref) {\n    let {\n      baseUrl,\n      headers\n    } = _ref;\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n  }\n\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  addCard(_ref2) {\n    let {\n      name,\n      link,\n      owner: _id\n    } = _ref2;\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        link,\n        owner: _id\n      })\n    }).then(this._checkResponse);\n  }\n\n  editProfile(_ref3) {\n    let {\n      name,\n      about\n    } = _ref3;\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        about\n      })\n    }).then(this._checkResponse).catch(err => {\n      console.log(err);\n    });\n  }\n\n  editAvatar(avatar) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar\n      })\n    }).then(this._checkResponse).catch(err => {\n      console.log(err);\n    });\n  }\n\n  getUserData() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  deleteCard(id) {\n    return fetch(`${this._baseUrl}/cards/${id}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  deleteLike(id) {\n    return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  addLike(id) {\n    return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n      method: 'PUT',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  changeLikeCardStatus(id, isLiked) {\n    if (isLiked) {\n      return this.addLike(id);\n    } else {\n      return this.deleteLike(id);\n    }\n  }\n\n}\n\nexport const api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-39',\n  headers: {\n    authorization: '1dbb1df0-e71b-4917-a03e-8221c4080837',\n    'Content-Type': 'application/json'\n  }\n});","map":{"version":3,"sources":["/Users/anastasiiaandreeva/Desktop/Yandex.Practikum/dev/react-mesto-auth/src/utils/Api.js"],"names":["Api","constructor","baseUrl","headers","_baseUrl","_headers","_checkResponse","res","ok","json","Promise","reject","status","getInitialCards","fetch","then","addCard","name","link","owner","_id","method","body","JSON","stringify","editProfile","about","catch","err","console","log","editAvatar","avatar","getUserData","deleteCard","id","deleteLike","addLike","changeLikeCardStatus","isLiked","api","authorization"],"mappings":"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","sourcesContent":["class Api {\n  constructor({baseUrl, headers}) {\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n  }\n\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {headers: this._headers})\n      .then(this._checkResponse)\n  }\n\n  addCard({name, link, owner: _id}) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        link,\n        owner: _id\n      })\n    })\n      .then(this._checkResponse)\n  }\n\n  editProfile({name, about}) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        about\n      })\n    })\n      .then(this._checkResponse)\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n\n  editAvatar(avatar) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar\n      })\n    })\n      .then(this._checkResponse)\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n\n  getUserData() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers,\n    })\n      .then(this._checkResponse)\n  }\n\n  deleteCard(id) {\n    return fetch(`${this._baseUrl}/cards/${id}`, {\n      method: 'DELETE',\n      headers: this._headers,\n    })\n      .then(this._checkResponse)\n  }\n\n  deleteLike(id) {\n    return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n      method: 'DELETE',\n      headers: this._headers,\n    })\n      .then(this._checkResponse)\n  }\n\n  addLike(id) {\n    return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n      method: 'PUT',\n      headers: this._headers,\n    })\n      .then(this._checkResponse)\n  }\n\n  changeLikeCardStatus(id, isLiked) {\n    if(isLiked){\n      return this.addLike(id)\n    } else {\n      return this.deleteLike(id)\n    }\n  }\n}\n\nexport const api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-39',\n  headers: {\n    authorization: '1dbb1df0-e71b-4917-a03e-8221c4080837',\n    'Content-Type': 'application/json'\n  }\n});\n"]},"metadata":{},"sourceType":"module"}