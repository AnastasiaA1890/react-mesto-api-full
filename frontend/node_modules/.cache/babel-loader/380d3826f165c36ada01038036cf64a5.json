{"ast":null,"code":"import _classCallCheck from\"/Users/anastasiiaandreeva/Desktop/Yandex.Practikum/dev/react-mesto-auth/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/anastasiiaandreeva/Desktop/Yandex.Practikum/dev/react-mesto-auth/node_modules/@babel/runtime/helpers/esm/createClass.js\";var Api=/*#__PURE__*/function(){function Api(_ref){var baseUrl=_ref.baseUrl,headers=_ref.headers;_classCallCheck(this,Api);this._baseUrl=baseUrl;this._headers=headers;}_createClass(Api,[{key:\"_checkResponse\",value:function _checkResponse(res){if(res.ok){return res.json();}else{return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));}}},{key:\"getInitialCards\",value:function getInitialCards(){return fetch(\"\".concat(this._baseUrl,\"/cards\"),{headers:this._headers}).then(this._checkResponse);}},{key:\"addCard\",value:function addCard(_ref2){var name=_ref2.name,link=_ref2.link,_id=_ref2.owner;return fetch(\"\".concat(this._baseUrl,\"/cards\"),{method:'POST',headers:this._headers,body:JSON.stringify({name:name,link:link,owner:_id})}).then(this._checkResponse);}},{key:\"editProfile\",value:function editProfile(_ref3){var name=_ref3.name,about=_ref3.about;return fetch(\"\".concat(this._baseUrl,\"/users/me\"),{method:'PATCH',headers:this._headers,body:JSON.stringify({name:name,about:about})}).then(this._checkResponse).catch(function(err){console.log(err);});}},{key:\"editAvatar\",value:function editAvatar(avatar){return fetch(\"\".concat(this._baseUrl,\"/users/me/avatar\"),{method:'PATCH',headers:this._headers,body:JSON.stringify({avatar:avatar})}).then(this._checkResponse).catch(function(err){console.log(err);});}},{key:\"getUserData\",value:function getUserData(){return fetch(\"\".concat(this._baseUrl,\"/users/me\"),{headers:this._headers}).then(this._checkResponse);}},{key:\"deleteCard\",value:function deleteCard(id){return fetch(\"\".concat(this._baseUrl,\"/cards/\").concat(id),{method:'DELETE',headers:this._headers}).then(this._checkResponse);}},{key:\"deleteLike\",value:function deleteLike(id){return fetch(\"\".concat(this._baseUrl,\"/cards/\").concat(id,\"/likes\"),{method:'DELETE',headers:this._headers}).then(this._checkResponse);}},{key:\"addLike\",value:function addLike(id){return fetch(\"\".concat(this._baseUrl,\"/cards/\").concat(id,\"/likes\"),{method:'PUT',headers:this._headers}).then(this._checkResponse);}},{key:\"changeLikeCardStatus\",value:function changeLikeCardStatus(id,isLiked){if(isLiked){return this.addLike(id);}else{return this.deleteLike(id);}}}]);return Api;}();export var api=new Api({baseUrl:'https://mesto.nomoreparties.co/v1/cohort-39',headers:{authorization:'1dbb1df0-e71b-4917-a03e-8221c4080837','Content-Type':'application/json'}});","map":{"version":3,"sources":["/Users/anastasiiaandreeva/Desktop/Yandex.Practikum/dev/react-mesto-auth/src/utils/Api.js"],"names":["Api","baseUrl","headers","_baseUrl","_headers","res","ok","json","Promise","reject","status","fetch","then","_checkResponse","name","link","_id","owner","method","body","JSON","stringify","about","catch","err","console","log","avatar","id","isLiked","addLike","deleteLike","api","authorization"],"mappings":"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","sourcesContent":["class Api {\n  constructor({baseUrl, headers}) {\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n  }\n\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {headers: this._headers})\n      .then(this._checkResponse)\n  }\n\n  addCard({name, link, owner: _id}) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        link,\n        owner: _id\n      })\n    })\n      .then(this._checkResponse)\n  }\n\n  editProfile({name, about}) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        about\n      })\n    })\n      .then(this._checkResponse)\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n\n  editAvatar(avatar) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar\n      })\n    })\n      .then(this._checkResponse)\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n\n  getUserData() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers,\n    })\n      .then(this._checkResponse)\n  }\n\n  deleteCard(id) {\n    return fetch(`${this._baseUrl}/cards/${id}`, {\n      method: 'DELETE',\n      headers: this._headers,\n    })\n      .then(this._checkResponse)\n  }\n\n  deleteLike(id) {\n    return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n      method: 'DELETE',\n      headers: this._headers,\n    })\n      .then(this._checkResponse)\n  }\n\n  addLike(id) {\n    return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n      method: 'PUT',\n      headers: this._headers,\n    })\n      .then(this._checkResponse)\n  }\n\n  changeLikeCardStatus(id, isLiked) {\n    if(isLiked){\n      return this.addLike(id)\n    } else {\n      return this.deleteLike(id)\n    }\n  }\n}\n\nexport const api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-39',\n  headers: {\n    authorization: '1dbb1df0-e71b-4917-a03e-8221c4080837',\n    'Content-Type': 'application/json'\n  }\n});\n"]},"metadata":{},"sourceType":"module"}